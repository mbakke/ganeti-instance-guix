(use-modules (gnu)) ;needed for "device" below

(let ((config-base (string-append (dirname (current-filename))
                                  "/config-base.scm")))
  (if (file-exists? config-base)
      (load config-base)
      (load "@EXAMPLEDIR@/config-base.scm")))

(operating-system
  (inherit default-os)
  (file-systems
   (let* ((target-uuid (getenv "TARGET_UUID"))
          (%my-filesystems
           (list
            (file-system
              (device (uuid target-uuid))
              (mount-point "/")
              (type "btrfs")
              (options "subvol=/system-root"))
            (file-system
              (device (uuid target-uuid))
              (mount-point "/gnu/store")
              (type "btrfs")
              (options "subvol=system-root/gnu/store"))
            (file-system
              (device (uuid target-uuid))
              (mount-point "/var/log")
              (type "btrfs")
              (options "subvol=system-root/var/log"))
            (file-system
              (device (uuid target-uuid))
              (mount-point "/var/lib")
              (type "btrfs")
              (options "subvol=system-root/var/lib"))
            (file-system
              (device (uuid target-uuid))
              (mount-point "/home")
              (type "btrfs")
              (options "subvol=system-root/home"))
            (file-system
              (device (uuid target-uuid))
              (mount-point "/swap")
              (needed-for-boot? #t)
              (type "btrfs")
              (flags '(no-atime))
              (options "subvol=/system-root/swap,compress=none")))))
     (append %my-filesystems %base-file-systems)))
  (swap-devices (list (swap-space
                       (target "/swap/swapfile")))))
